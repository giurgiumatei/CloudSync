# Use the official .NET 8 runtime as base image (Debian-based for better native library support)
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS base
WORKDIR /app
EXPOSE 80

# Install required packages for performance and debugging
RUN apt-get update && apt-get install -y \
    curl \
    procps \
    htop \
    libicu-dev \
    librdkafka-dev \
    && rm -rf /var/lib/apt/lists/*

# Use the SDK image to build the application
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
WORKDIR /src

# Clear any existing NuGet configuration that might reference Windows paths
RUN dotnet nuget locals all --clear

# Copy NuGet configuration first
COPY NuGet.config ./

# Copy project files
COPY CloudSync.Api/CloudSync.Api.csproj CloudSync.Api/
COPY CloudSync.Core/CloudSync.Core.csproj CloudSync.Core/
COPY CloudSync.Data/CloudSync.Data.csproj CloudSync.Data/
COPY CloudSync.Infrastructure/CloudSync.Infrastructure.csproj CloudSync.Infrastructure/
COPY CloudSync.Common/CloudSync.Common.csproj CloudSync.Common/

# Restore dependencies
RUN dotnet restore CloudSync.Api/CloudSync.Api.csproj

# Copy the source code
COPY . .

# Build the application
WORKDIR /src/CloudSync.Api
RUN dotnet build CloudSync.Api.csproj -c Release -o /app/build

# Publish the application
FROM build AS publish
RUN dotnet publish CloudSync.Api.csproj -c Release -o /app/publish \
    --no-restore \
    --self-contained false

# Final stage/image
FROM base AS final
WORKDIR /app

# Copy the published application
COPY --from=publish /app/publish .

# Create a non-root user for security
RUN groupadd -g 1001 appgroup && \
    useradd -u 1001 -g appgroup -s /bin/bash appuser
RUN chown -R appuser:appgroup /app
USER appuser

# Configure environment variables for performance
ENV DOTNET_GCServer=1 \
    DOTNET_GCConcurrent=1 \
    DOTNET_GCRetainVM=1 \
    DOTNET_ThreadPool_UnfairSemaphoreSpinLimit=6 \
    ASPNETCORE_URLS=http://+:80

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:80/api/healthcheck/test-connections || exit 1

ENTRYPOINT ["dotnet", "CloudSync.Api.dll"]